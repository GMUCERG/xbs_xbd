# Please refer to xbxpy/xbx/config.ini for defaults


[hardware]
platform = ek-tm4c123gxl_16mhz
#platform = ek-tm4c129exl_16mhz
#platform = msp-exp430f5529lp_16mhz
#platform = msp430fr5994_16mhz


[algorithm]
# Operation
#operation = crypto_hash
#operation = crypto_aead
operation = crypto_kem
#operation = crypto_sign

# Newline seperated list of primitives to work on
primitives = 
# kem
			babybear
#			firesaber
#			frodo640aes
#			frodo640cshake
#			kindi256342
#			kyber1024
#			kyber512
#			kyber768
#			lightsaber
#			mamabear
#			newhope1024cca
#			ntruhrss701
#			ntrukem443
#			ntrukem743
#			papabear
#			rlizard102411
#			saber
#			sikep503
#			sikep751
#			sntrup4591761

# sign
#			qtesla1
#			qtesla128
#			qtesla192
#			qtesla1p
#			qtesla256
#			qtesla3f
#			qtesla3p
#			qtesla3s
#			dilithium2
#			dilithium3
#			dilithium4

# hash
#			shake256

#			0cipher
#			aes256gcmv1   
#			aes128gcmv1
#			icepole128v1
#			keccakc512
#			aegis128		  --makefile fails because of inline functions			
#			aegis128l		 --KEYBYTES too large error
#			aes128n12t8clocv3
#			aes128n12t8silcv3
#-			aes128otrpv3
#			aescopav2		 --failed because of syscall to __sbrk?
#			morus640128v2	 --failed because of inline functions
#-			norx3241v3
#-			tiaoxinv2
#-			jambusimon64v2

# CAESAR
#			aeadaes192ocbtaglen64v1
#			Colm127v1
#			Colmov1
#			OCB128Taglen128
#			OCBAES128Taglen64
#			OCBAES192Taglen64
#			OCBAES192Taglen96
#			OCBAES192Taglen128
#			OCBAES256Taglen64
#			OCBAES256Taglen96
#			OCBAES256Taglen128

# work w/o modification
#			aes128n12t8silcv3
#			aes128n12t8clocv3
#			aesjambuv2
#			aes128otrpv3
#			aes128otrsv3

# temp fix: return in 'def test(num):'
#			acorn128v3	  
#			ascon128v12
# morus works 
#			morus640128v2


[implementation]

# # If whitelist is set, blacklists are ignored and only implementations in whitelist are run
# # Newline seperated path, relative from operation directory
whitelist =
# kem
			babybear/xbdref
			firesaber/xbd
			frodo640aes/m4
			frodo640cshake/m4
			kindi256342/m4
			kyber1024/ref
			kyber512/ref
			kyber768/ref
			lightsaber/xbd
			mamabear/xbdref
			newhope1024cca/ref
			ntruhrss701/pqm4ref
			ntrukem443/xbdref
			ntrukem743/pqm4ref
			papabear/xbdref
			rlizard102411/m4
			saber/m4
			sikep503/xbdref
			sikep751/pqm4ref
			sntrup4591761/m4

# sign
			dilithium2/ref
			dilithium3/ref
			dilithium4/ref
			qtesla1/ref
			qtesla128/ref
			qtesla192/ref
			qtesla1p/ref
			qtesla256/ref
			qtesla3f/ref
			qtesla3p/ref
			qtesla3s/ref

# hash
			shake256/gil/singlefile

# aead
#			keccakc512/simple
			0cipher/empty
			aes128gcmv1/ref
#			aes128gcmv1/ref_nooverlap
#			aes256gcmv1/ref_nooverlap
#			icepole128v1/ref
#			aegis128/ref
#			aegis128l/ref
#			aes128n12t8clocv3/ref
			aes128n12t8silcv3/ref
			aes128otrpv3/ref
#			aescopav2/ref
#			morus640128v2/ref
			norx3241v3/ref
			tiaoxinv2/ref
			jambusimon64v2/ref

# CAESAR
			aeadaes192ocbtaglen64v1/mcu_softaes_ref
			Colm127v1/mcu_softaes_ref
#			Colm127v1/ref
			Colmov1/mcu_softaes_ref
			OCB128Taglen128/mcu_softaes_ref
			OCBAES128Taglen64/mcu_softaes_ref
			OCBAES192Taglen64/mcu_softaes_ref
			OCBAES192Taglen96/mcu_softaes_ref
			OCBAES192Taglen128/mcu_softaes_ref
			OCBAES256Taglen64/mcu_softaes_ref
			OCBAES256Taglen96/mcu_softaes_ref
			OCBAES256Taglen128/mcu_softaes_ref

# work w/o modification
			aes128n12t8clocv3/ref
			aesjambuv2/ref
			aes128otrpv3/ref
			aes128otrsv3/ref
			acorn128v3/ref
			ascon128v12/ref
			morus640128v2/ref
		

# # List for blacklisting implementations not already excluded in global/platform blacklist file
# # Each entry on a new line: {path relative from operation directory} [optional dirchecksum.py generated hash, or 0] [comments]
blacklist =

# # Single line regex for blacklisting implementations
blacklist_regex = (openssl|^avx)

# Enforce checksum parameter in black/white-lists
enforce_bwlist_checksums = True


[paths]
data = data.db


[build]
# True if only first compiler is used (typically -O0) for debug purposes
one_compiler = True

# Build cores+1 implementations at a time. Should be kept True unless debugging, or examining logs where interleaved messages can be detrimental
parallel_build = True


[run]
# Rerun broken tests that have already been run. Default is False
#rerun = True

# Run checksum tests only once by default, since they are very slow
checksum_tests = 0

# By default, run benchmarks 3 times 
exec_runs = 1


[libsupercop]
# Specify implementations for libsupercop
# format: operation primitive implementation
implementations =
		crypto_verify 32 ref
		crypto_verify 16 ref
		crypto_verify 8 ref
		crypto_core aes128decrypt ref
		crypto_core aes128encrypt ref
		crypto_core aes256decrypt ref
		crypto_core aes256encrypt ref


[xbh]
# Our XBH runs at 16MHz, should not be changed
xbh_clock_hz = 120000000
# Host defaults to "xbh"
#address = 10.42.0.161
#port = 22595
[xbp]
# Shunt value in Ohms
shunt = 1
# gain of the current shunt amplifier 
gain = 100

