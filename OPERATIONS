crypto_verify :_BYTES (const unsigned char *,const unsigned char *)
crypto_core :_OUTPUTBYTES:_INPUTBYTES:_KEYBYTES:_CONSTBYTES (unsigned char *,const unsigned char *,const unsigned char *,const unsigned char *)
crypto_hashblocks :_STATEBYTES:_BLOCKBYTES (unsigned char *,const unsigned char *,unsigned long long)
crypto_hash :_BYTES (unsigned char *,const unsigned char *,unsigned long long)
crypto_stream :_xor:_KEYBYTES:_NONCEBYTES (unsigned char *,unsigned long long,const unsigned char *,const unsigned char *):_xor(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *)
crypto_onetimeauth :_verify:_BYTES:_KEYBYTES (unsigned char *,const unsigned char *,unsigned long long,const unsigned char *):_verify(const unsigned char *,const unsigned char *,unsigned long long,const unsigned char *)
crypto_auth :_verify:_BYTES:_KEYBYTES (unsigned char *,const unsigned char *,unsigned long long,const unsigned char *):_verify(const unsigned char *,const unsigned char *,unsigned long long,const unsigned char *)
crypto_secretbox :_open:_KEYBYTES:_NONCEBYTES:_ZEROBYTES:_BOXZEROBYTES (unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *):_open(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *)
crypto_aead _encrypt:_decrypt:_KEYBYTES:_NSECBYTES:_NPUBBYTES:_ABYTES:_NOOVERLAP _encrypt(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *,const unsigned char *):_decrypt(unsigned char *,unsigned long long *,unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *):
crypto_rng :_KEYBYTES:_OUTPUTBYTES (unsigned char *,unsigned char *,const unsigned char *)
crypto_scalarmult :_base:_BYTES:_SCALARBYTES (unsigned char *,const unsigned char *,const unsigned char *):_base(unsigned char *,const unsigned char *)
crypto_box :_open:_keypair:_beforenm:_afternm:_open_afternm:_PUBLICKEYBYTES:_SECRETKEYBYTES:_BEFORENMBYTES:_NONCEBYTES:_ZEROBYTES:_BOXZEROBYTES (unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *,const unsigned char *):_open(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *,const unsigned char *):_keypair(unsigned char *,unsigned char *):_beforenm(unsigned char *,const unsigned char *,const unsigned char *):_afternm(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *):_open_afternm(unsigned char *,const unsigned char *,unsigned long long,const unsigned char *,const unsigned char *)
crypto_dh :_keypair:_BYTES:_SECRETKEYBYTES:_PUBLICKEYBYTES (unsigned char *,const unsigned char *,const unsigned char *):_keypair(unsigned char *,unsigned char *)
crypto_sign :_open:_keypair:_BYTES:_SECRETKEYBYTES:_PUBLICKEYBYTES:_DETERMINISTIC (unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *):_open(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *):_keypair(unsigned char *,unsigned char *)
crypto_kem _keypair:_enc:_dec:_PUBLICKEYBYTES:_SECRETKEYBYTES:_BYTES:_CIPHERTEXTBYTES _keypair(unsigned char *,unsigned char *):_enc(unsigned char *,unsigned char *,const unsigned char *):_dec(unsigned char *,const unsigned char *,const unsigned char *)
crypto_encrypt :_open:_keypair:_BYTES:_SECRETKEYBYTES:_PUBLICKEYBYTES (unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *):_open(unsigned char *,unsigned long long *,const unsigned char *,unsigned long long,const unsigned char *):_keypair(unsigned char *,unsigned char *)
