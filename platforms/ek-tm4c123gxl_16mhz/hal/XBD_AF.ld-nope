/******************************************************************************
 *
 * project.ld - Linker configuration file for project.
 *
 * Copyright (c) 2013-2014 Texas Instruments Incorporated.  All rights reserved.
 * Software License Agreement
 * 
 *   Redistribution and use in source and binary forms, with or without
 *   modification, are permitted provided that the following conditions
 *   are met:
 * 
 *   Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * 
 *   Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the  
 *   distribution.
 * 
 *   Neither the name of Texas Instruments Incorporated nor the names of
 *   its contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * This is part of revision 2.1.0.12573 of the Tiva Firmware Development Package.
 *
 *****************************************************************************/


ENTRY(ResetISR)
MEMORY
{
    FLASH (rx) : ORIGIN = 0x00002800, LENGTH = 246K
    SRAM (rwx) : ORIGIN = 0x20000000, LENGTH = 32K
}

SECTIONS
{
	_text = .;
    .text :
    {
        *(.text.ResetISR)
        *(.text*)
        *(.rodata*)
    } > FLASH
	_etext = .;

	/* Needed for 64-bit divide */
	. = ALIGN(4);
	__exidx_start = .;
    .ARM.exidx : { 
        *(.ARM.exidx* .gnu.linkonce.armexidx.*) 
    } > FLASH
	__exidx_end = .;

    /* Needed to align lma address of .data */
	. = ALIGN(4);
	_data = .;
    .data : {
        *(vtable)
        *(.data*)
    } > SRAM AT >FLASH 
	_edata = .;

    _ldata = LOADADDR(.data);

	. = ALIGN(4);
	_bss = .;
    .bss : {
        *(.bss*)
        *(COMMON)
    } > SRAM
	_ebss = .;
	. = ALIGN(8);
	_end = .;

	.stack = (ORIGIN(SRAM) + LENGTH(SRAM)) {
		PROVIDE( __stack = . );
		*(.stack*)
	}

	PROVIDE( _heap_ptr = _end );
	PROVIDE( _heap_end = ORIGIN(SRAM) + LENGTH(SRAM));
	PROVIDE( _stack_ptr = ORIGIN(SRAM) + LENGTH(SRAM));
}
