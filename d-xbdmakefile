#
# Brian Hession
#
# CURRENTLY ONLY WORKS FOR ek-tm4c123gxl_16mhz
# ...will likely need some adjustments here to accomodate others
#

BUILDDIR = d-xbdbuild/${PLATFORM}/${OP}/${ALGO}/${IMPL}

# Paths
ALGOPACK_PATH = algobase
PATH_IMPL = ${ALGOPACK_PATH}/${OP}/${ALGO}/${IMPL}
PATH_AF = embedded/xbd/xbd_af
PATH_PLATFORM = platforms/${PLATFORM}
PATH_HAL = ${PATH_PLATFORM}/hal

# Part information
PROJECT = TM4C123GH6PM_BL
PART=TM4C123GH6PM

# Binaries
AXFFILE = ${MODE}.axf
TARGET = ${MODE}.bin

# Get the location of libgcc.a from the GCC front-end.
LIBGCC = ${shell ${CC} ${CFLAGS} -print-libgcc-file-name}

# Get the location of libc.a from the GCC front-end.
LIBC = ${shell ${CC} ${CFLAGS} -print-file-name=libc.a}

# Compiler
GCC_TYPE = none-eabi
CC = arm-${GCC_TYPE}-gcc
LD = arm-${GCC_TYPE}-gcc
OBJCOPY = arm-${GCC_TYPE}-objcopy

## Compile options common for all C compilation units.
CFLAGS += -mthumb \
		-mcpu=cortex-m4 \
		-mfpu=fpv4-sp-d16 -mfloat-abi=softfp \
		-Os \
		-ffunction-sections \
		-fdata-sections \
		-MD \
		-std=gnu99 \
		-Wall \
		-DPART_${PART} \
		-c
CFLAGS += -I${PATH_HAL} -I${PATH_HAL}/drivers
CFLAGS += -I${PATH_AF} -I${PATH_IMPL} -Id-xbdsrc -I${BUILDDIR}
CFLAGS += -Dgcc -DBOOTLOADER
CFLAGS += -DXBD_NOCHECKSUM -DDEBUG -DXBX_DEBUG_APP -DXBX_DEBUG_APP_VERBOSE
CFLAGS += -ggdb3

## Linker flags
LDFLAGS += -Wl,--gc-sections
LDFLAGS += -Wl,-Map=${PATH_PLATFORM}/bootloader/makefiles/${PROJECT}.map
LDFLAGS += --entry ResetISR -fuse-linker-plugin
LDFLAGS += -T d-xbdsrc/XBD_DEBUG.ld 

SRCS += d-xbdsrc/startup_gcc.c
SRCS += d-xbdsrc/${OP}/${MODE}.c
SRCS += ${PATH_AF}/XBD_crc.c
SRCS += ${PATH_AF}/XBD_debug.c
SRCS += ${PATH_AF}/XBD_util.c
SRCS += ${PATH_AF}/XBD_commands.c
SRCS += ${PATH_AF}/try-anything.c
SRCS += ${PATH_HAL}/XBD_HAL.c
SRCS += ${PATH_HAL}/drivers/sysctl.c
SRCS += ${PATH_HAL}/drivers/interrupt.c
SRCS += ${PATH_HAL}/drivers/uart.c
SRCS += ${PATH_HAL}/drivers/gpio.c
SRCS += ${PATH_HAL}/drivers/i2c.c
SRCS += ${PATH_HAL}/drivers/i2c_comm.c
SRCS += ${PATH_HAL}/drivers/systick.c
SRCS += ${PATH_HAL}/drivers/flash.c
SRCS += $(shell find ${PATH_IMPL} -name "*.c" -or -name "*.[Ss]")

OBJS := $(SRCS:%.c=%.o)
OBJS := $(OBJS:%.s=%.o)
OBJS := $(OBJS:%.S=%.o)
OBJS := $(patsubst ${PATH_IMPL}%,${BUILDDIR}/algo%,${OBJS})
OBJS := $(patsubst ${PATH_AF}%,${BUILDDIR}/xbd_af%,${OBJS})
OBJS := $(patsubst ${PATH_HAL}%,${BUILDDIR}/hal%,${OBJS})
OBJS := $(patsubst d-xbdsrc/${OP}%,${BUILDDIR}%,${OBJS})
OBJS := $(patsubst d-xbdsrc%,${BUILDDIR}%,${OBJS})

## Objects explicitly added by the user
LINKONLYOBJECTS = '${LIBC}' '${LIBGCC}'

## Build
all: ${BUILDDIR}/${TARGET}

hal:
	@mkdir -p ${BUILDDIR}/hal/drivers

xbd_af: 
	@mkdir -p ${BUILDDIR}/xbd_af 

algo:
	@mkdir -p ${BUILDDIR}/algo

## Compile
${BUILDDIR}/hal/%.o: ${PATH_HAL}/%.c |hal
	@echo "CC  ${<}";
	@${CC} ${CFLAGS} -o ${@} -c ${^}

${BUILDDIR}/xbd_af/%.o: ${PATH_AF}/%.c |xbd_af
	@echo "CC  ${<}";
	@${CC} ${CFLAGS} -o ${@} -c ${^}

${BUILDDIR}/algo/%.o: ${PATH_IMPL}/%.c |algo
	@echo "CC  ${<}";
	@${CC} ${CFLAGS} -o ${@} -c ${^}

${BUILDDIR}/algo/%.o: ${PATH_IMPL}/%.s |algo
	@echo "CC  ${<}";
	@${CC} ${CFLAGS} -o ${@} -c ${^}

${BUILDDIR}/algo/%.o: ${PATH_IMPL}/%.S |algo
	@echo "CC  ${<}";
	@${CC} ${CFLAGS} -o ${@} -c ${^}

${BUILDDIR}/${MODE}.o: d-xbdsrc/${OP}/${MODE}.c
	@echo "CC  ${<}";
	@${CC} ${CFLAGS} -o ${@} -c ${^}

${BUILDDIR}/startup_gcc.o: d-xbdsrc/startup_gcc.c
	@echo "CC  ${<}";
	@${CC} ${CFLAGS} -o ${@} -c ${^}

##Link
${BUILDDIR}/${AXFFILE}: ${OBJS} d-xbdsrc/XBD_DEBUG.ld 
	 ${LD} ${LDFLAGS} ${OBJS} ${LINKONLYOBJECTS} ${LIBDIRS} ${LIBS} -o ${@}
	 
${BUILDDIR}/${TARGET}: ${BUILDDIR}/${AXFFILE}
	${OBJCOPY} -O binary ${^} ${@}

## Clean target
clean:
	@echo CLEAN
	@rm -rf ${BUILDDIR}

